
print(f'''\033[1;37m \033[2m
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЗтв╕таЛтгЛтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЙтгЛта╣таВтв╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЗтв╕таАтг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таАтбЗтв╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тв╕таЖтг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐та┐та┐таЫтаЫтаЫтаЙтаЛтаЙтаЩтаЫтаЫтаЫтаЫта┐та┐тв┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таАтбЗтв╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тгАтгАтг┐тб┐та┐таЫтаЛтвЙтгБтадтадтаЦтаТтаЛтаЙтаЙтаЙтаЙтаЩтаТтадтгЙтаЙтаАтаАтаАтаАтаЙтаЩта╗тв┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таАтбЗтв╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тб┐та┐та┐та┐таЫтаЫтаЫтаЫтаЫтаЫтаЙтаАтаАтаАтаРтаЫта░та╢та╢таАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаИтаСтвжтбАтаАтаАтаАтаАтаАтаАтаИтаЩта╗та┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таАтаГтв╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЗтаатгДтгАтгАтгатгдтгдтгдтгдтгдтгдтгдтгмтгЙтгнтг┐тг╖тг╢тб╢тватгдтгдтгАтгАтгАтгАтгАтаАтаАтаАтаАтаАтаАтаИта▓таАтаАтаАтаАтаАтаАтаАтаАтаАтаИтаЩтаЫтаЯтаЫтаЫтаЫтаЫтаЫтаЫтаЫта╗та┐та┐та╢тв╢тг╛тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таПтаАтг┐тг┐тг┐тг┐тг┐та┐та┐та┐та┐тв┐тг┐тг┐тг┐тг┐тг┐тг┐та┐таЗта╕таБтаАтаАта╣та┐та┐та┐та┐та┐та┐та┐та┐та┐та┐тг┐тг┐тбДтв╗тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐та┐таЯтаЫтаЫта╗та╖тг╢тг╢таАтаАтаАтаАтаАтаИтаЙтаЩта╗тв┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЯтаАтв░тг┐тг┐таЯтаЛтаАтаАтаАтаАтаАтаАтаИтаЫтг┐тг┐таЙтаАтвАтгдтаАтг╢тг╢тг╢тг╢тг┐тг┐тг┐тг╢тг╢тг╢тг╢тг╢тг╢тгдтгдтгДтбБтаИтаЫтв┐тг┐тг┐тб┐та┐та┐таЯтаЛтаАтаАтаАтаАтаАтаАтаАтаАтаЩтв╖тгдтбАтаАтаАтаАтаАтаЙтаТтвдтбИтаЩта┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЗтаАтг┐тг┐тб┐таАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаИтг┐тбДтаАтв╗тг┐тгзта╣тг┐тг┐тг┐тг┐тг┐тб┐та┐та┐та┐та┐тг┐тг┐тг┐тг┐тг┐тг┐таатбДтаАтв╣тг┐тг┐тг┐тг┐таВтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАта╗тг┐тг╖тгжтгдтгДтгАтгатгДтв╣тг╖тгДтаИтв╗тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбАтаШтв┐таГтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтв╗тг┐тгДтаАтаЩта┐тгзтбШтв┐тг┐тг┐тг┐тг┐тг┐тг╢тг╢тг╢тг╢тгдтгдтгдтгМтгЙтаАтбЙтаАтаАтв┐тг┐тг┐тбЗтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтг┐тг┐тг┐тг┐тбЯтаЛтбЙтаЙтаИтаЙтаЙтаАтг╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тгПтаБтаАтаАтаАтаАтаАтаАтаАтаАтаГтаАтаАтаАтаАтаАта╕та┐та┐та┐та╢тажтадтадтадтадтадтадтвдтбдтаДтгИтгЙтгЙтгЙтгЙтгЙтаЙтаЙтаАтаЙтаБтаАтаИтгЫтгЫтбГтаАтаАтаАтаАтаАтаИтаГтаАтаАтаАтаАтаАтв░тг┐тг┐тг┐тб┐таАтаКтаАтаАтаАтаАтаАта░тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╢тгдтгДтбАтаАтаАтаАтаАтаАтаРтаАтаАтаАтаАтг╕тг┐тг┐тг╢таЦтаТтаТтаТтаТтаТтаТтаТта╢та╢та╢тадтадтадтадтадтадтадтадтадтаАтаАтгАтгАтгЙтвЙтбГтаАтаАтаАтаАтаИтаАтаАтаАтаАтаАтаАтаАтг╝тг┐тг┐тг┐тг╖тгдтгдтгдтбДтаАтаДтаАтаАтг╣тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╖тгДтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаАтвАтгдтгдтбдтадтадтадтадтадтадтадтадтадтадтадтадтадтадтадтадтгдтвдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгАтаАтаАтаАтаАтаАтаАтаАтаАтаАтаЙтаЙтаатадтадтадтадтвдтгдтг┤тг╢тг╢тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тгзтг┤тг╢тг╢тг╢тг╢тг╢тгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтгдтг╢тг╢тг╢тг╢тг╢тг╢тг╢тг╛тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таЫтв┐тг┐тг┐тг┐тг┐таЯтаЫтаЫтаЫтаЫтв┐тг┐та┐таЫтаЫтаЫтаЫта┐тг┐таЯтаЫтаЫтаЫтаЫта╗тв┐тбЯтаЫтаЫтаЫтаЫтаЫта╗тг┐таЯтаЫтаЫтаЫтаЫтв┐тг┐тб┐таЫтаЫтаЫтаЫта╗тг┐тг┐тг┐тбЯтг┐тбЯта╗тг┐тг┐тг┐тг┐таЫтг┐тб┐таЫтаЫтаЫтаЫта┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таАтв╗тг┐тг┐тг┐тбЗтватг╢тг╢тг╢тгжтаАтбПтаАтг╢тг╢та╢та╢тадтг╜таАта▓та╢та╢та╢таЖтв╕тбЗта░та╢та╢та╢таЖтаАтг┐таАтг╢тг╢тг╢тг╢таАтг┐таАтг┤тг╢та╢та╢тадтг╝тг┐тг┐тбЗтг┐тбЗтватбИтаЩтв┐тг┐таАтг┐таАтг┤тг╢тг╢тг╢тгДтг╜тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐таАта╕та┐та┐та┐тбЗтаРта┐та┐та┐таЯтвАтгЗтаАта┐та╖та┤таЖтаАтг┐таАтвдтгдтгдтгдтгдтг╛тбЗтаатгдтгдтгдтбДтаАтгЗтаАта┐та┐та┐та┐таАтг┐таАта╗та┐тадта╢таАтг╕тг┐тг┐тбЗтв┐тбЗтв╕тг┐тгжтгАтаЙтаАтг┐таАта╗та┐та┐та┐таЛтг╣тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╢тг╢тг╢тг╢тг╢тг┐тг╢тг╢тг╢тг╢тг╢тг╛тг┐тг╢тг╢тг╢тг╢тг╢тг╛тг┐тгжтг╛тг┐тг┐тг┐тг┐тг┐тгзтг┤тг┐тг┐тг┐тг╖тгдтг┐тг╢тг╢тг╢тг╢тг╢тг╛тг┐тг╖тг╢тг╢тг╢тг╢тг╢тг┐тг┐тг┐тгзтг╛тгзтг┤тг┐тг┐тг┐тг╖тгдтг┐тг╖тг╢тг╢тг╢тг╢тг╢тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЯтвЙтбЩтг┐тг┐тг┐тг┐тг┐таЯтаЫтаЫтв┐тг┐тбЯтв╗тг┐тбЯтаЫтаЫтаЫтг┐тг┐таЯтаЫтаЫтв╗тбЯтаЫтаЫтв╗тбЯта╗тг┐таЫтбЯтаЫтаЫта╗тг┐таПтв╗тг┐таЯтв╗тг┐тг┐тг┐тг┐тг┐тг┐таЙтбЙтв╗тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тбЗта╕тбАта╗та┐тг┐тг┐тг┐таАтаЫтаЧтв╕таЛтгАтгАтаЩтбЗтвитгмтаАтг┐тг┐таАтгатгДтаШтбЗтаАтаАтв╕тбЗтватгИтаАтг┐тбГтв╕тг┐таЛтвАтбАтаЫтбЗта╗таЯтв┐тг┐тг┐та┐таЯтаАтаБтв╕тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╖тгдтгЙтбЫта▓тажтвмтгНтгЫтаЫта┐та┐тг┐тг┐тг┐тг┐тг╖тг┐тг┐тг┐тг┐тг┐тг╢тг┐тг┐тг╛тг┐тг┐тг┐тг┐тг╖тг┐тг┐тг╛тг┐тг╖тг╛тг┐тг┐тг┐тг┐та╖та┐таЫтвЛтгЙтбБтаатаЦтвВтгАтгатг╛тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╢тгжтгдтгНтгЩтаУта▓тадтгмтгЙтбЫтаЫта┐тв┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тб┐та┐таЯтаЫтгЙтбйтадтаФтаЪтгГтгАтгдтг┤тг╢тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╖тг╢тгжтгмтгЙтгЫтаТта╢твдтгНтгЩтбЫта╗та┐тг┐тг┐тг┐та┐таЯтаЫтгЛтгЙтбдта┤таТтвИтгЙтгбтгдтг╢тг╛тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╖тг╢тгдтгнтгЙтбЫта▓тадтгдтадтаАтаТтгЙтгбтгдтг┤тг╢тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐
       тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг╢тг╢тг╢тг╛тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐тг┐''')

car_dict = {}
# Main Menu
def display_main_menu():
        print("\033[1;31m===================================================================================================================================================")
        print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭУжЁЭУоЁЭУ╡ЁЭУмЁЭУ╕ЁЭУ╢ЁЭУо ЁЭУ╜ЁЭУ╕ ЁЭУЫЁЭУ╕ЁЭУ░ЁЭУ╣ЁЭУ╗ЁЭУ╕ЁЭУ░ ЁЭУШЁЭУ╖ЁЭУмЁЭУ╕ЁЭУ╗ЁЭУ╣ЁЭУ╕ЁЭУ╗ЁЭУкЁЭУ╜ЁЭУ▓ЁЭУ╕ЁЭУ╖                                                               ")
        print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭРЦЁЭРбЁЭРЮЁЭРлЁЭРЮ ЁЭРЮЁЭРпЁЭРЮЁЭРлЁЭР▓ ЁЭРлЁЭРвЁЭРЭЁЭРЮ ЁЭРвЁЭРм ЁЭРйЁЭРлЁЭРиЁЭРаЁЭРлЁЭРЪЁЭРжЁЭРжЁЭРЮЁЭРЭ ЁЭРЯЁЭРиЁЭРл ЁЭРйЁЭРЮЁЭРлЁЭРЯЁЭРЮЁЭРЬЁЭРнЁЭРвЁЭРиЁЭРз")
        print("===================================================================================================================================================")

        print(f"\033[1;31m[1] ЁЭРСЁЭРЮЁЭРзЁЭРн ЁЭРЪ ЁЭРВЁЭРЪЁЭРл")
        print("[2] ЁЭРСЁЭРЮЁЭРнЁЭРоЁЭРлЁЭРз ЁЭРЪ ЁЭРВЁЭРЪЁЭРл")
        print("[0] ЁЭРДЁЭР▒ЁЭРвЁЭРн")

# Car Rental
def rent_a_car():
    print("---------------------------------------------------------------------------------------------------------------------------------------------------")
    print("\033[1:31m===================================================================================================================================================")
    print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭФЦЁЭФвЁЭФйЁЭФвЁЭФаЁЭФ▒ ЁЭФ▒ЁЭФеЁЭФв ЁЭФЧЁЭФ╢ЁЭФнЁЭФв ЁЭФмЁЭФг тДнЁЭФЮЁЭФп                                                               ")
    print("===================================================================================================================================================")
    print("[1] ЁЭРТЁЭРйЁЭРиЁЭРлЁЭРнЁЭРм ЁЭРВЁЭРЪЁЭРл")
    print("[2] ЁЭРЕЁЭРЪЁЭРжЁЭРвЁЭРеЁЭР▓ ЁЭРВЁЭРЪЁЭРл")
    print("[3] ЁЭРФЁЭРнЁЭРвЁЭРеЁЭРвЁЭРнЁЭР▓ ЁЭРХЁЭРЮЁЭРбЁЭРвЁЭРЬЁЭРеЁЭРЮЁЭРм")
    print("[4] ЁЭРДЁЭРеЁЭРЮЁЭРЬЁЭРнЁЭРлЁЭРвЁЭРЬ ЁЭРВЁЭРЪЁЭРл")
    print("[ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ 0 ЁЭЪТЁЭЪП ЁЭЪвЁЭЪШЁЭЪЮ ЁЭЪаЁЭЪКЁЭЪЧЁЭЪЭ ЁЭЪЭЁЭЪШ ЁЭЪРЁЭЪШ ЁЭЪЛЁЭЪКЁЭЪМЁЭЪФ ЁЭЪЭЁЭЪШ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЩЁЭЪЫЁЭЪОЁЭЪЯЁЭЪТЁЭЪШЁЭЪЮЁЭЪЬ ЁЭЪМЁЭЪСЁЭЪШЁЭЪТЁЭЪМЁЭЪО]")
    print("---------------------------------------------------------------------------------------------------------------------------------------------------")
    car_type_choice = input("ЁЭСмЁЭТПЁЭТХЁЭТЖЁЭТУ ЁЭТЪЁЭТРЁЭТЦЁЭТУ ЁЭСкЁЭТЙЁЭТРЁЭТКЁЭТДЁЭТЖ: ")
    print("---------------------------------------------------------------------------------------------------------------------------------------------------")

    if car_type_choice == "1":
        display_car_choices(sports_car, "ЁЭУвЁЭУЯЁЭУЮЁЭУбЁЭУгЁЭУв ЁЭУТЁЭУРЁЭУбЁЭУв")
    elif car_type_choice == "2":
        display_car_choices(family_car, "ЁЭУХЁЭУРЁЭУЬЁЭУШЁЭУЫЁЭУи ЁЭУТЁЭУРЁЭУбЁЭУв")
    elif car_type_choice == "3":
        display_car_choices(utility_vehicles, "ЁЭУдЁЭУгЁЭУШЁЭУЫЁЭУШЁЭУгЁЭУи ЁЭУеЁЭУФЁЭУЧЁЭУШЁЭУТЁЭУЫЁЭУФЁЭУв")
    elif car_type_choice == "4":
        display_car_choices(electric_car, "ЁЭУФЁЭУЫЁЭУФЁЭУТЁЭУгЁЭУбЁЭУШЁЭУТ ЁЭУТЁЭУРЁЭУбЁЭУв")
    elif car_type_choice == "0":
        return
    else:
        print("Invalid choice. Please try again.")
        rent_a_car()


# Function to display cars from a given dictionary
def display_car_choices(car_dict, category):
    print("\033[1:36m===================================================================================================================================================")
    print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{category}                                                                       ")
    print("===================================================================================================================================================")
    for item, details in car_dict.items():
        if not details['rented']:
            print(f"{item:<20}: Daily Rent - тВ▒{details['daily_rent']:>5,.2f} | Registration Number - {details['registration_number']:>3} | Transmission - {details['transmission']:>10} | Seats - {details['seats']:>2} | Exterior Color - {details['exterior_color']:>5}")
    print("---------------------------------------------------------------------------------------------------------------------------------------------------")
    print("[ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ 0 ЁЭЪТЁЭЪП ЁЭЪвЁЭЪШЁЭЪЮ ЁЭЪаЁЭЪКЁЭЪЧЁЭЪЭ ЁЭЪЭЁЭЪШ ЁЭЪРЁЭЪШ ЁЭЪЛЁЭЪКЁЭЪМЁЭЪФ ЁЭЪЭЁЭЪШ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЩЁЭЪЫЁЭЪОЁЭЪЯЁЭЪТЁЭЪШЁЭЪЮЁЭЪЬ ЁЭЪМЁЭЪСЁЭЪШЁЭЪТЁЭЪМЁЭЪО]")

    while True:
        car_choice = input("ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЧЁЭЪКЁЭЪЦЁЭЪО ЁЭЪШЁЭЪП ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪМЁЭЪКЁЭЪЫ ЁЭЪвЁЭЪШЁЭЪЮ ЁЭЪаЁЭЪКЁЭЪЧЁЭЪЭ ЁЭЪЭЁЭЪШ ЁЭЪЫЁЭЪОЁЭЪЧЁЭЪЭ: ").lower()
        print("---------------------------------------------------------------------------------------------------------------------------------------------------")
        if car_choice == "0":
            return rent_a_car()
        elif car_choice in (key.lower() for key in car_dict.keys()):
            actual_key = next(key for key in car_dict if key.lower() == car_choice)
            if car_dict[actual_key]['rented']:
                print("This car is already rented. Please choose another car.")
            else:
                enter_personal_details(car_dict[actual_key])
                break
        else:
            print("Invalid choice. Please try again.")


# Personal Details
def enter_personal_details(selected_car):
    print("\033[1:36m===================================================================================================================================================")
    print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭХ░ЁЭЦУЁЭЦЩЁЭЦКЁЭЦЧ ЁЭХ╗ЁЭЦКЁЭЦЧЁЭЦШЁЭЦФЁЭЦУЁЭЦЖЁЭЦС ЁЭХпЁЭЦКЁЭЦЩЁЭЦЖЁЭЦОЁЭЦСЁЭЦШ                                                      ")
    print("===================================================================================================================================================")
    print("[ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ 0 ЁЭЪТЁЭЪП ЁЭЪвЁЭЪШЁЭЪЮ ЁЭЪаЁЭЪКЁЭЪЧЁЭЪЭ ЁЭЪЭЁЭЪШ ЁЭЪРЁЭЪШ ЁЭЪЛЁЭЪКЁЭЪМЁЭЪФ ЁЭЪЭЁЭЪШ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЩЁЭЪЫЁЭЪОЁЭЪЯЁЭЪТЁЭЪШЁЭЪЮЁЭЪЬ ЁЭЪМЁЭЪСЁЭЪШЁЭЪТЁЭЪМЁЭЪО]")
    while True:
        name = input("ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪвЁЭЪШЁЭЪЮЁЭЪЫ ЁЭЪЧЁЭЪКЁЭЪЦЁЭЪО: ")
        if name == "0":
            return rent_a_car()
        else:
            break

    while True:
        rental_days_str = input("ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЧЁЭЪЮЁЭЪЦЁЭЪЛЁЭЪОЁЭЪЫ ЁЭЪШЁЭЪП ЁЭЪЫЁЭЪОЁЭЪЧЁЭЪЭЁЭЪКЁЭЪХ ЁЭЪНЁЭЪКЁЭЪвЁЭЪЬ: ")
        if rental_days_str == "0":
            return rent_a_car()
        elif rental_days_str.isdigit():
            rental_days = int(rental_days_str)
            if rental_days <= 0:
                print("Rental days must be greater than 0. Please enter a valid number.")
            else:
                selected_car['rental_days'] = rental_days
                break
        else:
            print("Invalid input.")

    while True:
        age = input("ЁЭЩ┐ЁЭЪХЁЭЪОЁЭЪКЁЭЪЬЁЭЪО ЁЭЪОЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪвЁЭЪШЁЭЪЮЁЭЪЫ ЁЭЪКЁЭЪРЁЭЪО: ")
        print(
            "---------------------------------------------------------------------------------------------------------------------------------------------------")
        if age == "0":
            return rent_a_car()
        elif age.isdigit():
            age = int(age)
            if age < 18:
                print("You must be at least 18 years old to rent a vehicle")
            else:
                break
        else:
            print("Invalid input. Please enter a valid age.")

    calculate_rental_cost(selected_car, rental_days, age, name)
    car_dict[selected_car['registration_number']] = selected_car


# Calculate Rental Cost
def calculate_rental_cost(selected_car, rental_days, age, name):
    base_rental_cost = selected_car["daily_rent"] * rental_days
    if age >= 60:
        discount = 0.15 * base_rental_cost
    else:
        discount = 0
    total_rental_cost = base_rental_cost - discount

    print("\033[1:36m===================================================================================================================================================")
    print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tтДЬЁЭФвЁЭФлЁЭФ▒ЁЭФЮЁЭФй тДнЁЭФмЁЭФ░ЁЭФ▒ ЁЭФЦЁЭФ▓ЁЭФкЁЭФкЁЭФЮЁЭФпЁЭФ╢                                                        ")
    print("===================================================================================================================================================")
    print(f"ЁЭРБЁЭРЪЁЭРмЁЭРЮ ЁЭРСЁЭРЮЁЭРзЁЭРнЁЭРЪЁЭРе ЁЭРВЁЭРиЁЭРмЁЭРн: тВ▒{base_rental_cost:,.2f}")
    print(f"ЁЭРГЁЭРвЁЭРмЁЭРЬЁЭРиЁЭРоЁЭРзЁЭРн: тВ▒{discount:,.2f}")
    print(f"ЁЭРУЁЭРиЁЭРнЁЭРЪЁЭРе ЁЭРСЁЭРЮЁЭРзЁЭРнЁЭРЪЁЭРе ЁЭРВЁЭРиЁЭРмЁЭРн: тВ▒{total_rental_cost:,.2f}")

    while True:
        payment_str = input("ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪвЁЭЪШЁЭЪЮЁЭЪЫ ЁЭЪЩЁЭЪКЁЭЪвЁЭЪЦЁЭЪОЁЭЪЧЁЭЪЭ: ")
        if payment_str.isdigit():
            payment = int(payment_str)
            if payment < total_rental_cost:
                print("Insufficient payment. Please try again.")
            else:
                change = payment - total_rental_cost
                print(f"Change: тВ▒{change:,.2f}")
                print("---------------------------------------------------------------------------------------------------------------------------------------------------")
                confirm_rental(selected_car, rental_days, name)
                break
        else:
            print("Invalid input. Please enter a valid payment amount.")


# Confirm Rental
def confirm_rental(selected_car, rental_days, name):
    print("\033[1:36m===================================================================================================================================================")
    print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tтДЬЁЭФвЁЭФлЁЭФ▒ЁЭФЮЁЭФй тДнЁЭФмЁЭФлЁЭФгЁЭФжЁЭФпЁЭФкЁЭФЮЁЭФ▒ЁЭФжЁЭФмЁЭФл                                                           ")
    print("===================================================================================================================================================")
    print(f"ЁЭРВЁЭРЪЁЭРл ЁЭРУЁЭР▓ЁЭРйЁЭРЮ: {selected_car['name']}")
    print(f"ЁЭРСЁЭРЮЁЭРзЁЭРнЁЭРЪЁЭРе ЁЭРГЁЭРЪЁЭР▓ЁЭРм: {rental_days} days")
    print(f"ЁЭРНЁЭРЪЁЭРжЁЭРЮ: {name}")
    print(f"ЁЭРСЁЭРЮЁЭРаЁЭРвЁЭРмЁЭРнЁЭРлЁЭРЪЁЭРнЁЭРвЁЭРиЁЭРз ЁЭРНЁЭРоЁЭРжЁЭРЫЁЭРЮЁЭРл: {selected_car['registration_number']}")
    print(f"TЁЭРлЁЭРЪЁЭРзЁЭРмЁЭРжЁЭРвЁЭРмЁЭРмЁЭРвЁЭРиЁЭРз: {selected_car['transmission']}")
    print(f"ЁЭРТЁЭРЮЁЭРЪЁЭРнЁЭРм: {selected_car['seats']}")
    print(f"ЁЭРДЁЭР▒ЁЭРнЁЭРЮЁЭРлЁЭРвЁЭРиЁЭРл ЁЭРВЁЭРиЁЭРеЁЭРиЁЭРл: {selected_car['exterior_color']}")

    while True:
        confirm = input("ЁЭЩ░ЁЭЪЫЁЭЪО ЁЭЪвЁЭЪШЁЭЪЮ ЁЭЪЬЁЭЪЮЁЭЪЫЁЭЪО ЁЭЪКЁЭЪЛЁЭЪШЁЭЪЮЁЭЪЭ ЁЭЪвЁЭЪШЁЭЪЮЁЭЪЫ ЁЭЪЫЁЭЪОЁЭЪЧЁЭЪЭЁЭЪКЁЭЪХ (ЁЭЪв/ЁЭЪЧ): ").lower()
        print("---------------------------------------------------------------------------------------------------------------------------------------------------")
        if confirm == "y":
            final_output("rental")
            selected_car['rented'] = True
            break
        elif confirm == "n":
            enter_personal_details(selected_car)
            break
        else:
            print("Invalid choice. Please try again.")


# Return a Car
def return_a_car(car_dict):
    print("\033[1:36m===================================================================================================================================================")
    print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tтДнЁЭФЮЁЭФп тДЬЁЭФвЁЭФ▒ЁЭФ▓ЁЭФпЁЭФл ЁЭФУЁЭФпЁЭФмЁЭФаЁЭФвЁЭФ░ЁЭФ░                                                                ")
    print("===================================================================================================================================================")
    print("[ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ 0 ЁЭЪТЁЭЪП ЁЭЪвЁЭЪШЁЭЪЮ ЁЭЪаЁЭЪКЁЭЪЧЁЭЪЭ ЁЭЪЭЁЭЪШ ЁЭЪРЁЭЪШ ЁЭЪЛЁЭЪКЁЭЪМЁЭЪФ ЁЭЪЭЁЭЪШ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЩЁЭЪЫЁЭЪОЁЭЪЯЁЭЪТЁЭЪШЁЭЪЮЁЭЪЬ ЁЭЪМЁЭЪСЁЭЪШЁЭЪТЁЭЪМЁЭЪО]")
    print("---------------------------------------------------------------------------------------------------------------------------------------------------")
    registration_number = input("ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЫЁЭЪОЁЭЪРЁЭЪТЁЭЪЬЁЭЪЭЁЭЪЫЁЭЪКЁЭЪЭЁЭЪТЁЭЪШЁЭЪЧ ЁЭЪЧЁЭЪЮЁЭЪЦЁЭЪЛЁЭЪОЁЭЪЫ ЁЭЪШЁЭЪП ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЯЁЭЪОЁЭЪСЁЭЪТЁЭЪМЁЭЪХЁЭЪО: ")
    if registration_number == "0":
        return
    for car_name, vehicle in car_dict.items():
        if vehicle["registration_number"] == registration_number:
            if vehicle['rented']:
                print("Vehicle found.")
                while True:
                    rental_days_str = input("ЁЭЩ┤ЁЭЪЧЁЭЪЭЁЭЪОЁЭЪЫ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЧЁЭЪЮЁЭЪЦЁЭЪЛЁЭЪОЁЭЪЫ ЁЭЪШЁЭЪП ЁЭЪЫЁЭЪОЁЭЪЧЁЭЪЭЁЭЪКЁЭЪХ ЁЭЪНЁЭЪКЁЭЪвЁЭЪЬ: ")
                    if rental_days_str.isdigit():
                        rental_days = int(rental_days_str)
                        if rental_days <= 0:
                            print("Rental days must be greater than 0. Please enter a valid number.")
                        else:
                            break
                    else:
                        print("Invalid input.")
                if rental_days > vehicle['rental_days']:
                    additional_fee = (rental_days - vehicle['rental_days']) * vehicle['daily_rent']
                    print(f"Additional fee: тВ▒{additional_fee:,.2f}")
                    while True:
                        payment_str = input("Enter your payment: ")
                        if payment_str.isdigit():
                            payment = int(payment_str)
                            if additional_fee > payment:
                                print("Insufficient payment. Please try again.")
                            else:
                                change = payment - additional_fee
                                print(f"Change: тВ▒{change:,.2f}")
                                final_output("return")
                                vehicle['rented'] = False
                                return True
                        else:
                            print("Invalid input. Please enter a valid payment amount.")
                else:
                    print("Rental days match. No additional fee required.")
                    final_output("return")
                    vehicle['rented'] = False
                    return True
    print("Vehicle not found. Please try again.")
    return return_a_car(car_dict)


# Final Output
def final_output(action):
    if action == "rental":
        print("\033[1:36m===================================================================================================================================================")
        print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭРУЁЭРбЁЭРЪЁЭРзЁЭРд ЁЭР▓ЁЭРиЁЭРо ЁЭРЯЁЭРиЁЭРл ЁЭРСЁЭРЮЁЭРзЁЭРнЁЭРвЁЭРзЁЭРа ЁЭР░ЁЭРвЁЭРнЁЭРб ЁЭРоЁЭРм!                                                       ")
        print("===================================================================================================================================================")
    elif action == "return":
        print("===================================================================================================================================================")
        print(f"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭРУЁЭРбЁЭРЪЁЭРзЁЭРд ЁЭР▓ЁЭРиЁЭРо ЁЭРЯЁЭРиЁЭРл ЁЭРСЁЭРЮЁЭРнЁЭРоЁЭРлЁЭРзЁЭРвЁЭРзЁЭРа ЁЭРиЁЭРоЁЭРл ЁЭРХЁЭРЮЁЭРбЁЭРвЁЭРЬЁЭРеЁЭРЮ!                                                    ")
        print("===================================================================================================================================================")


# Define car dictionaries
sports_car = {
    "Subaru BRZ": {"name": "Subaru BRZ", "daily_rent": 7500, "registration_number": "SP1", "rented": False,
                   "rental_days": 0, "transmission": "Manual", "seats": 2, "exterior_color": "Red"},
    "Chevrolet Corvette": {"name": "Chevrolet Corvette", "daily_rent": 8000, "registration_number": "SP2",
                           "rented": False, "rental_days": 0, "transmission": "Automatic", "seats": 2, "exterior_color": "Blue"},
    "Ford Mustang": {"name": "Ford Mustang", "daily_rent": 8000, "registration_number": "SP3", "rented": False,
                     "rental_days": 0, "transmission": "Manual", "seats": 2, "exterior_color": "Gray"}
}

family_car = {
    "Mitsubishi Xpander": {"name": "Mitsubishi Xpander", "daily_rent": 4500, "registration_number": "FM1",
                           "rented": False, "rental_days": 0, "transmission": "Automatic", "seats": 7, "exterior_color": "Silver"},
    "Toyota Rush": {"name": "Toyota Rush", "daily_rent": 4500, "registration_number": "FM2", "rented": False,
                    "rental_days": 0, "transmission": "Manual", "seats": 5, "exterior_color": "Black"},
    "Montero Sport": {"name": "Montero Sport", "daily_rent": 5000, "registration_number": "FM3", "rented": False,
                      "rental_days": 0, "transmission": "Automatic", "seats": 7, "exterior_color": "White"}
}

utility_vehicles = {
    "Mitsubishi L300": {"name": "Mitsubishi L300", "daily_rent": 2000, "registration_number": "UT1", "rented": False,
                        "rental_days": 0, "transmission": "Manual", "seats": 3, "exterior_color": "Blue"},
    "Hiace Cargo": {"name": "Hiace Cargo", "daily_rent": 2500, "registration_number": "UT2", "rented": False,
                    "rental_days": 0, "transmission": "Automatic", "seats": 3, "exterior_color": "White"},
    "Suzuki Carry": {"name": "Suzuki Carry", "daily_rent": 1800, "registration_number": "UT3", "rented": False,
                     "rental_days": 0, "transmission": "Manual", "seats": 2, "exterior_color": "Red"}
}

electric_car = {
    "Hyundai IONIQ": {"name": "Hyundai IONIQ", "daily_rent": 9000, "registration_number": "EC1", "rented": False,
                      "rental_days": 0, "transmission": "Automatic", "seats": 5, "exterior_color": "Silver"},
    "Nissan Leaf": {"name": "Nissan Leaf", "daily_rent": 9500, "registration_number": "EC2", "rented": False,
                    "rental_days": 0, "transmission": "Automatic", "seats": 5, "exterior_color": "Black"},
    "BYD E6": {"name": "BYD E6", "daily_rent": 9500, "registration_number": "EC3", "rented": False, "rental_days": 0,
               "transmission": "Automatic", "seats": 5, "exterior_color": "White"}
}

# Program Main
run_program = True
while run_program:
    display_main_menu()
    choice = input("ЁЭСмЁЭТПЁЭТХЁЭТЖЁЭТУ ЁЭТЪЁЭТРЁЭТЦЁЭТУ ЁЭТДЁЭТЙЁЭТРЁЭТКЁЭТДЁЭТЖ: ")
    if choice == "1":
        rent_a_car()
    elif choice == "2":
        if return_a_car(car_dict):
            continue
    elif choice == "0":
        while True:
            exit_program = input("ЁЭЩ┤ЁЭЪбЁЭЪТЁЭЪЭ ЁЭЪЭЁЭЪСЁЭЪО ЁЭЪЩЁЭЪЫЁЭЪШЁЭЪРЁЭЪЫЁЭЪКЁЭЪЦ? (ЁЭЪвЁЭЪОЁЭЪЬ/ЁЭЪЧЁЭЪШ): ").lower()
            print("---------------------------------------------------------------------------------------------------------------------------------------------------")
            if exit_program == "yes":
                print("===================================================================================================================================================")
                print(f"\t\t\t\t\t\t\t\t\t\t\t\t\tЁЭРУЁЭРбЁЭРЪЁЭРзЁЭРд ЁЭР▓ЁЭРиЁЭРо ЁЭРЯЁЭРиЁЭРл ЁЭРоЁЭРмЁЭРвЁЭРзЁЭРа ЁЭРиЁЭРоЁЭРл ЁЭРАЁЭРйЁЭРйЁЭРеЁЭРвЁЭРЬЁЭРЪЁЭРнЁЭРвЁЭРиЁЭРз!                                                                ")
                print("===================================================================================================================================================")
                run_program = False
                break
            elif exit_program == "no":
                break
            else:
                print("Invalid input. Please enter 'yes' or 'no'.")
    else:
        print("Invalid choice. Please try again.")
